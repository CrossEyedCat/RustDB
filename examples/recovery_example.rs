//! –ü—Ä–∏–º–µ—Ä –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ —Å–±–æ—è

use rustdb::core::{
    AdvancedRecoveryManager, RecoveryConfig,
};
// removed unused LogRecord import
use std::path::Path;
use std::time::Duration;

fn main() -> Result<(), Box<dyn std::error::Error>> {
    println!("=== –ü—Ä–∏–º–µ—Ä —Å–∏—Å—Ç–µ–º—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö ===\n");
    
    // 1. –°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
    println!("1. –°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è");
    let config = RecoveryConfig {
        max_recovery_time: Duration::from_secs(300),
        enable_parallel: true,
        num_threads: 4,
        create_backup: true,
        enable_validation: true,
    };
    
    let mut manager = AdvancedRecoveryManager::new(config);
    println!("   ‚úì –ú–µ–Ω–µ–¥–∂–µ—Ä –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω\n");
    
    // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
    println!("2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è");
    let log_dir = Path::new("./logs");
    let needs_recovery = manager.needs_recovery(log_dir);
    
    if needs_recovery {
        println!("   ‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–µ–∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏");
        println!("   üîÑ –¢—Ä–µ–±—É–µ—Ç—Å—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ\n");
    } else {
        println!("   ‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è");
        println!("   (–Ω–µ—Ç –ª–æ–≥-—Ñ–∞–π–ª–æ–≤ –∏–ª–∏ –≤—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã)\n");
    }
    
    // 3. –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    println!("3. –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –ø–µ—Ä–µ–¥ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ–º");
    let data_dir = Path::new("./data");
    let backup_dir = Path::new("./backup");
    
    match manager.create_backup(data_dir, backup_dir) {
        Ok(_) => println!("   ‚úì –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞ –≤ ./backup\n"),
        Err(_) => println!("   ‚ÑπÔ∏è  –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –Ω–µ —Å–æ–∑–¥–∞–Ω–∞ (–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö)\n"),
    }
    
    // 4. –°–∏–º—É–ª—è—Ü–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
    println!("4. –°–∏–º—É–ª—è—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è");
    println!("   –ü—Ä–æ—Ü–µ—Å—Å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –≤–∫–ª—é—á–∞–µ—Ç:");
    println!("   üìä –≠—Ç–∞–ø 1: –ê–Ω–∞–ª–∏–∑ –ª–æ–≥–æ–≤");
    println!("      - –ß—Ç–µ–Ω–∏–µ –≤—Å–µ—Ö –ª–æ–≥-—Ñ–∞–π–ª–æ–≤");
    println!("      - –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π");
    println!("      - –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π");
    println!("      - –ü–æ–∏—Å–∫ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã—Ö —Ç–æ—á–µ–∫");
    println!();
    println!("   üîÑ –≠—Ç–∞–ø 2: REDO –æ–ø–µ—Ä–∞—Ü–∏–∏");
    println!("      - –ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π");
    println!("      - –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑–º–µ–Ω—ë–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü");
    println!("      - –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –≤ –ø–æ—Ä—è–¥–∫–µ LSN");
    println!();
    println!("   ‚Ü©Ô∏è  –≠—Ç–∞–ø 3: UNDO –æ–ø–µ—Ä–∞—Ü–∏–∏");
    println!("      - –û—Ç–∫–∞—Ç –Ω–µ–∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π");
    println!("      - –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö");
    println!("      - –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ");
    println!();
    println!("   üîç –≠—Ç–∞–ø 4: –í–∞–ª–∏–¥–∞—Ü–∏—è");
    println!("      - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö");
    println!("      - –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π");
    println!();
    
    // 5. –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    if needs_recovery {
        println!("5. –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è");
        match manager.recover(log_dir) {
            Ok(stats) => {
                println!("   ‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!");
                println!("\n6. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:");
                println!("   –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –ª–æ–≥-—Ñ–∞–π–ª–æ–≤: {}", stats.log_files_processed);
                println!("   –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {}", stats.total_records);
                println!("   –û–ø–µ—Ä–∞—Ü–∏–π REDO: {}", stats.redo_operations);
                println!("   –û–ø–µ—Ä–∞—Ü–∏–π UNDO: {}", stats.undo_operations);
                println!("   –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: {}", stats.recovered_transactions);
                println!("   –û—Ç–∫–∞—á–µ–Ω–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: {}", stats.rolled_back_transactions);
                println!("   –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —Å—Ç—Ä–∞–Ω–∏—Ü: {}", stats.recovered_pages);
                println!("   –í—Ä–µ–º—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è: {} –º—Å", stats.recovery_time_ms);
                println!("   –û—à–∏–±–æ–∫: {}", stats.recovery_errors);
            }
            Err(e) => {
                println!("   ‚ö†Ô∏è  –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è: {}", e);
            }
        }
    } else {
        println!("5. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è");
        println!("   –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏");
    }
    
    // 7. –û–ø–∏—Å–∞–Ω–∏–µ –∞–ª–≥–æ—Ä–∏—Ç–º–∞
    println!("\n7. –ê–ª–≥–æ—Ä–∏—Ç–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è (ARIES)");
    println!("   ARIES = Algorithm for Recovery and Isolation Exploiting Semantics");
    println!();
    println!("   –§–∞–∑—ã:");
    println!("   1Ô∏è‚É£  Analysis  - –∞–Ω–∞–ª–∏–∑ –ª–æ–≥–æ–≤, –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è");
    println!("   2Ô∏è‚É£  REDO      - –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ –≤—Å–µ—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π");
    println!("   3Ô∏è‚É£  UNDO      - –æ—Ç–∫–∞—Ç –Ω–µ–∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π");
    println!();
    println!("   –ì–∞—Ä–∞–Ω—Ç–∏–∏:");
    println!("   ‚úì Atomicity   - —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –ª–∏–±–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø—Ä–∏–º–µ–Ω–µ–Ω–∞, –ª–∏–±–æ –æ—Ç–∫–∞—á–µ–Ω–∞");
    println!("   ‚úì Durability  - –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ —Ç–µ—Ä—è—é—Ç—Å—è");
    println!("   ‚úì Consistency - –ë–î –æ—Å—Ç–∞—ë—Ç—Å—è –≤ –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏");
    
    // 8. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    println!("\n8. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é");
    println!("   ‚úì –†–µ–≥—É–ª—è—Ä–Ω–æ —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Ç–æ—á–∫–∏");
    println!("   ‚úì –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –∞—Ä—Ö–∏–≤–∞—Ü–∏—é –ª–æ–≥–æ–≤");
    println!("   ‚úì –ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ —Ä–∞–∑–º–µ—Ä –ª–æ–≥-—Ñ–∞–π–ª–æ–≤");
    println!("   ‚úì –¢–µ—Å—Ç–∏—Ä—É–π—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è");
    println!("   ‚úì –°–æ–∑–¥–∞–≤–∞–π—Ç–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ –ø–µ—Ä–µ–¥ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ–º");
    
    println!("\n=== –ü—Ä–∏–º–µ—Ä –∑–∞–≤–µ—Ä—à—ë–Ω —É—Å–ø–µ—à–Ω–æ ===");
    
    Ok(())
}

