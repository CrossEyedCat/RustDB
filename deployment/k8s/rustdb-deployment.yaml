apiVersion: apps/v1
kind: Deployment
metadata:
  name: rustdb
  namespace: rustdb
  labels:
    app: rustdb
spec:
  replicas: 3
  selector:
    matchLabels:
      app: rustdb
  template:
    metadata:
      labels:
        app: rustdb
    spec:
      containers:
      - name: rustdb
        image: rustdb/rustdb:latest
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8081
          name: grpc
        env:
        - name: RUST_LOG
          value: "info"
        - name: RUSTDB_DATA_DIR
          value: "/app/data"
        - name: RUSTDB_LOG_DIR
          value: "/app/logs"
        - name: RUSTDB_CONFIG_DIR
          value: "/app/config"
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
        - name: data-volume
          mountPath: /app/data
        - name: logs-volume
          mountPath: /app/logs
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: config-volume
        configMap:
          name: rustdb-config
      - name: data-volume
        persistentVolumeClaim:
          claimName: rustdb-data-pvc
      - name: logs-volume
        persistentVolumeClaim:
          claimName: rustdb-logs-pvc

