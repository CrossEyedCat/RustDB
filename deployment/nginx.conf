events {
    worker_connections 1024;
}

http {
    upstream rustdb_backend {
        server rustdb:8080;
        # Можно добавить больше инстансов для load balancing
        # server rustdb2:8080;
        # server rustdb3:8080;
    }

    # Логирование
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    # Основные настройки
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip сжатие
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;

    # HTTP сервер (редирект на HTTPS)
    server {
        listen 80;
        server_name _;
        return 301 https://$host$request_uri;
    }

    # HTTPS сервер
    server {
        listen 443 ssl http2;
        server_name _;

        # SSL конфигурация
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # API endpoints
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://rustdb_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Health check
        location /health {
            proxy_pass http://rustdb_backend/health;
            access_log off;
        }

        # Metrics (только для внутренней сети)
        location /metrics {
            allow 172.20.0.0/16;
            deny all;
            proxy_pass http://rustdb_backend/metrics;
        }

        # Статические файлы
        location /static/ {
            alias /var/www/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Root
        location / {
            return 200 'RustDB API Server\n';
            add_header Content-Type text/plain;
        }
    }

    # Мониторинг сервер (внутренний)
    server {
        listen 8080;
        server_name _;

        # Prometheus metrics
        location /prometheus/ {
            proxy_pass http://prometheus:9090/;
        }

        # Grafana
        location /grafana/ {
            proxy_pass http://grafana:3000/;
        }

        # Jaeger
        location /jaeger/ {
            proxy_pass http://jaeger:16686/;
        }
    }
}

